{
  "__inputs": [
    {
      "name": "DS_CLICKHOUSE",
      "label": "ClickHouse",
      "description": "",
      "type": "datasource",
      "pluginId": "vertamedia-clickhouse-datasource",
      "pluginName": "ClickHouse"
    }
  ],
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "7.1.1"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "vertamedia-clickhouse-datasource",
      "name": "ClickHouse",
      "version": "2.0.5"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1596727391122,
  "links": [],
  "panels": [
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "${DS_CLICKHOUSE}",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "database": "default",
          "dateColDataType": "",
          "dateLoading": false,
          "dateTimeColDataType": "TimeReceived",
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "interval": "",
          "intervalFactor": 1,
          "query": "WITH\r\n    if(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip\r\nSELECT\r\n    $timeSeries as t,\r\n    sum(Bytes * SamplingRate) AS bps\r\nFROM $table\r\nWHERE\r\n    $timeFilter\r\n    AND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).1\r\n\t                               AND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).2 \r\nGROUP BY\r\n    t\r\nORDER BY t\r\n\r\n",
          "rawQuery": "WITH     if(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip SELECT     (intDiv(toUInt32(TimeReceived), 15) * 15) * 1000 as t,     sum(Bytes * SamplingRate) AS bps FROM default.flows_raw WHERE     TimeReceived >= toDateTime(1596557163)     AND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('213.151.32.114/32'))[1]), toUInt8(splitByChar('/',toString('213.151.32.114/32'))[2])).1                                 AND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('213.151.32.114/32'))[1]), toUInt8(splitByChar('/',toString('213.151.32.114/32'))[2])).2  GROUP BY     t ORDER BY t",
          "refId": "A",
          "round": "0s",
          "table": "flows_raw",
          "tableLoading": false
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Traffic per source IP",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "bps",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": "${DS_CLICKHOUSE}",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 3,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "database": "default",
          "dateColDataType": "",
          "dateLoading": false,
          "dateTimeColDataType": "TimeReceived",
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "interval": "",
          "intervalFactor": 1,
          "query": "WITH\r\n    if(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip,\r\n    dictGetString('dictionaries.interfaces', 'IfName', toUInt64(InIf)) AS InterfaceName,\r\n    dictGetString('dictionaries.interfaces', 'RouterName', toUInt64(InIf)) AS RouterName     \r\nSELECT\r\n    if(InterfaceName = '', toString(InIf), concat(RouterName,' ',InterfaceName)) || '/' || toString(InIf) as InputInterface,\r\n    sum(Bytes * SamplingRate) AS bps\r\nFROM $table\r\nWHERE\r\n    $timeFilter\r\n    AND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).1\r\n\t                               AND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).2 \r\n\t                             \r\nGROUP BY\r\n    InputInterface\r\nORDER BY \r\n  bps DESC\r\n\r\n",
          "rawQuery": "WITH     if(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip,     dictGetString('dictionaries.interfaces', 'IfName', toUInt64(InIf)) AS InterfaceName,     dictGetString('dictionaries.interfaces', 'RouterName', toUInt64(InIf)) AS RouterName      SELECT     if(InterfaceName = '', toString(InIf), concat(RouterName,' ',InterfaceName)) || '/' || toString(InIf) as InputInterface,     sum(Bytes * SamplingRate) AS bps FROM default.flows_raw WHERE     TimeReceived >= toDateTime(1596706252)     AND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('213.151.32.114/32'))[1]), toUInt8(splitByChar('/',toString('213.151.32.114/32'))[2])).1                                 AND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('213.151.32.114/32'))[1]), toUInt8(splitByChar('/',toString('213.151.32.114/32'))[2])).2                                 GROUP BY     InputInterface ORDER BY    bps DESC",
          "refId": "A",
          "round": "0s",
          "table": "flows_raw",
          "tableLoading": false
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Traffic per source IP  and Interface",
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "${DS_CLICKHOUSE}",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "hiddenSeries": false,
      "id": 5,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "database": "default",
          "dateColDataType": "",
          "dateLoading": false,
          "dateTimeColDataType": "TimeReceived",
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "interval": "",
          "intervalFactor": 1,
          "query": "WITH\r\n    if(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip,\r\n\tdictGetString('dictionaries.interfaces', 'IfName', toUInt64(InIf)) AS IfName,\r\n\tdictGetString('dictionaries.interfaces', 'RouterName', toUInt64(InIf)) AS RouterName\r\nSELECT\r\n    $timeSeries as t,\r\n    concat(RouterName,'_',IfName) AS RouterInterface,\r\n    sum(Bytes * SamplingRate) AS bps\r\nFROM $table\r\nWHERE\r\n    $timeFilter\r\n    AND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).1\r\n\t                               AND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).2 \r\n\t                               AND RouterInterface IN array($InInterface)\r\nGROUP BY\r\n    t,\r\n    RouterInterface\r\nORDER BY t\r\n\r\n",
          "rawQuery": "WITH     if(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip,  dictGetString('dictionaries.interfaces', 'IfName', toUInt64(InIf)) AS IfName,  dictGetString('dictionaries.interfaces', 'RouterName', toUInt64(InIf)) AS RouterName SELECT     (intDiv(toUInt32(TimeReceived), 15) * 15) * 1000 as t,     concat(RouterName,'_',IfName) AS RouterInterface,     sum(Bytes * SamplingRate) AS bps FROM default.flows_raw WHERE     TimeReceived >= toDateTime(1596723037)     AND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('52.214.0.0/16'))[1]), toUInt8(splitByChar('/',toString('52.214.0.0/16'))[2])).1                                 AND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('52.214.0.0/16'))[1]), toUInt8(splitByChar('/',toString('52.214.0.0/16'))[2])).2                                  AND RouterInterface IN array('CORE-A_ae0','CORE-A_ae0.10','CORE-A_ae0.100','CORE-A_ae0.1007','CORE-A_ae0.101','CORE-A_ae0.1012','CORE-A_ae0.102','CORE-A_ae0.1020','CORE-A_ae0.1021','CORE-A_ae0.1025','CORE-A_ae0.1027','CORE-A_ae0.1028','CORE-A_ae0.1033','CORE-A_ae0.1037','CORE-A_ae0.117','CORE-A_ae0.128','CORE-A_ae0.130','CORE-A_ae0.15','CORE-A_ae0.16','CORE-A_ae0.17','CORE-A_ae0.2007','CORE-A_ae0.2010','CORE-A_ae0.2030','CORE-A_ae0.21','CORE-A_ae0.28','CORE-A_ae0.3010','CORE-A_ae0.3030','CORE-A_ae0.41','CORE-A_ae0.42','CORE-A_ae0.50','CORE-A_ae0.52','CORE-A_ae0.55','CORE-A_ae0.57','CORE-A_ae0.59','CORE-A_ae0.6','CORE-A_ae0.710','CORE-A_ae0.711','CORE-A_ae0.712','CORE-A_ae0.713','CORE-A_ae0.714','CORE-A_ae0.77','CORE-A_ae0.78','CORE-A_ae0.79','CORE-A_ae0.8','CORE-A_ae0.81','CORE-A_ae0.84','CORE-A_ae0.889','CORE-A_ae0.96','CORE-A_ae1','CORE-A_ae1.101','CORE-B_ae0','CORE-B_ae0.100','CORE-B_ae0.1007','CORE-B_ae0.1010','CORE-B_ae0.1018','CORE-B_ae0.1020','CORE-B_ae0.1023','CORE-B_ae0.1025','CORE-B_ae0.1028','CORE-B_ae0.1030','CORE-B_ae0.1034','CORE-B_ae0.1037','CORE-B_ae0.104','CORE-B_ae0.106','CORE-B_ae0.108','CORE-B_ae0.1080','CORE-B_ae0.11','CORE-B_ae0.110','CORE-B_ae0.113','CORE-B_ae0.118','CORE-B_ae0.120','CORE-B_ae0.125','CORE-B_ae0.127','CORE-B_ae0.129','CORE-B_ae0.131','CORE-B_ae0.15','CORE-B_ae0.16','CORE-B_ae0.18','CORE-B_ae0.20','CORE-B_ae0.2007','CORE-B_ae0.2008','CORE-B_ae0.201','CORE-B_ae0.202','CORE-B_ae0.204','CORE-B_ae0.212','CORE-B_ae0.27','CORE-B_ae0.41','CORE-B_ae0.42','CORE-B_ae0.48','CORE-B_ae0.49','CORE-B_ae0.51','CORE-B_ae0.53','CORE-B_ae0.56','CORE-B_ae0.58','CORE-B_ae0.6','CORE-B_ae0.61','CORE-B_ae0.62','CORE-B_ae0.64','CORE-B_ae0.66','CORE-B_ae0.67','CORE-B_ae0.720','CORE-B_ae0.721','CORE-B_ae0.722','CORE-B_ae0.723','CORE-B_ae0.724','CORE-B_ae0.77','CORE-B_ae0.78','CORE-B_ae0.79','CORE-B_ae0.8','CORE-B_ae0.81','CORE-B_ae0.84','CORE-B_ae0.85','CORE-B_ae0.889','CORE-B_ae0.96','CORE-B_ae1','CORE-B_ae1.101') GROUP BY     t,     RouterInterface ORDER BY t",
          "refId": "A",
          "round": "0s",
          "table": "flows_raw",
          "tableLoading": false
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Traffic per source IP And Interface",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "bps",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": "${DS_CLICKHOUSE}",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 8
      },
      "id": 4,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "database": "default",
          "dateColDataType": "",
          "dateLoading": false,
          "dateTimeColDataType": "TimeReceived",
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "interval": "",
          "intervalFactor": 1,
          "query": "WITH     \r\n\tif(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip,\r\n\tdictGetString('dictionaries.interfaces', 'IfName', toUInt64(InIf)) AS IfName,\r\n\tdictGetString('dictionaries.interfaces', 'RouterName', toUInt64(InIf)) AS RouterName\r\nSELECT      \r\n\tconcat(RouterName,'_',IfName) AS RouterInterface,\r\n\tsum(Bytes * SamplingRate) AS bps FROM default.flows_raw\r\nWHERE    \r\n\tTimeReceived >= toDateTime(1596696511)     \r\n\tAND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).1   \r\n\tAND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString(\\'$sourceip\\'))[1]), toUInt8(splitByChar('/',toString(\\'$sourceip\\'))[2])).2\r\n\tAND RouterInterface IN array($InInterface)\r\nGROUP BY     RouterInterface \r\nORDER BY    bps DESC",
          "rawQuery": "WITH       if(EType = 0x800 , IPv4NumToString(reinterpretAsUInt32(substring(reverse(SrcAddr), 13, 4))), IPv6NumToString(SrcAddr)) as srcip,  dictGetString('dictionaries.interfaces', 'IfName', toUInt64(InIf)) AS IfName,  dictGetString('dictionaries.interfaces', 'RouterName', toUInt64(InIf)) AS RouterName SELECT        concat(RouterName,'_',IfName) AS RouterInterface,  sum(Bytes * SamplingRate) AS bps FROM default.flows_raw WHERE      TimeReceived >= toDateTime(1596696511)       AND IPv4StringToNum(srcip) BETWEEN IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('52.214.0.0/16'))[1]), toUInt8(splitByChar('/',toString('52.214.0.0/16'))[2])).1     AND IPv4CIDRToRange(IPv4StringToNum(splitByChar('/',toString('52.214.0.0/16'))[1]), toUInt8(splitByChar('/',toString('52.214.0.0/16'))[2])).2  AND RouterInterface IN array('CORE-A_ae0.1007','CORE-A_ae0.1025') GROUP BY     RouterInterface  ORDER BY    bps DESC",
          "refId": "A",
          "round": "0s",
          "table": "flows_raw",
          "tableLoading": false
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Traffic per source IP  and Interface With Filter",
      "type": "table"
    }
  ],
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "52.214.0.0/16",
          "value": "52.214.0.0/16"
        },
        "hide": 0,
        "label": "Source IP",
        "name": "sourceip",
        "options": [
          {
            "selected": true,
            "text": "52.214.0.0/16",
            "value": "52.214.0.0/16"
          }
        ],
        "query": "52.214.0.0/16",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "allValue": null,
        "current": {},
        "datasource": "${DS_CLICKHOUSE}",
        "definition": "select concat(RouterName, '_' , IfName) from dictionaries.interfaces ",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "InInterface",
        "options": [],
        "query": "select concat(RouterName, '_' , IfName) from dictionaries.interfaces ",
        "refresh": 1,
        "regex": "/^.*_ae.*$/",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Netflow 3",
  "uid": "1MCvIRSGk",
  "version": 5
}